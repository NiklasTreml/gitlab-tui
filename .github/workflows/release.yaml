on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: cargo test --verbose
  create-release:
    name: deploy
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          [
            aarch64-unknown-linux-gnu,
            armv7-unknown-linux-gnueabihf,
            i686-unknown-linux-gnu,
            i686-unknown-linux-musl,
            mips-unknown-linux-gnu,
            mips64-unknown-linux-gnuabi64,
            mips64el-unknown-linux-gnuabi64,
            mipsel-unknown-linux-gnu,
            powerpc-unknown-linux-gnu,
            powerpc64-unknown-linux-gnu,
            powerpc64le-unknown-linux-gnu,
            arm-unknown-linux-gnueabi,
            x86_64-unknown-linux-gnu,
            x86_64-unknown-linux-musl,
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          # TODO:
          # strip target/${{ matrix.target }}/release/gitlab-tui

          cd target/${{ matrix.target }}/release          
          tar czvf ../../../gitlab-tui-${{ matrix.target }}.tar.gz gitlab-tui
          cd -

      - name: Publish
        uses: softprops/action-gh-release@v1
        # TODO: if any of the build step fails, the release should be deleted.
        with:
          files: "gitlab-tui*"
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
